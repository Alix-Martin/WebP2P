/**
 * This file is part of WebP2P.
 *
 * WebP2P is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * WebP2P is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with WebP2P.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Filename:    WebP2P.cpp
 * Author(s):   Dries Staelens (partly auto-generated by Firebreath)
 * Copyright:   Copyright (c) 2010 Dries Staelens
 * Description: Implementation of the browser plug-in.
**/

/* Firebreath includes */
#include "NpapiTypes.h"

/* WebP2P includes */
#include "WebP2PAPI.hpp"
#include "WebP2P.hpp"

void WebP2P::StaticInitialize() {
}

void WebP2P::StaticDeinitialize() {
}

WebP2P::WebP2P() {
}

WebP2P::~WebP2P() {
}

void WebP2P::onPluginReady() {
}

FB::JSAPIPtr WebP2P::createJSAPI() {
    // m_host is the BrowserHost
    FB::DOM::WindowPtr window = m_host->getDOMWindow();
    
    return FB::JSAPIPtr(
    	new WebP2PAPI(FB::ptr_cast<WebP2P>(shared_ptr()), m_host));
}

bool WebP2P::onMouseDown(FB::MouseDownEvent *evt, FB::PluginWindow *)
{
    //printf("Mouse down at: %d, %d\n", evt->m_x, evt->m_y);
    return false;
}

bool WebP2P::onMouseUp(FB::MouseUpEvent *evt, FB::PluginWindow *)
{
    //printf("Mouse up at: %d, %d\n", evt->m_x, evt->m_y);
    return false;
}

bool WebP2P::onMouseMove(FB::MouseMoveEvent *evt, FB::PluginWindow *)
{
    //printf("Mouse move at: %d, %d\n", evt->m_x, evt->m_y);
    return false;
}
bool WebP2P::onWindowAttached(FB::AttachedEvent *evt, FB::PluginWindow *)
{
    // The window is attached; act appropriately
    return false;
}

bool WebP2P::onWindowDetached(FB::DetachedEvent *evt, FB::PluginWindow *)
{
    // The window is about to be detached; act appropriately
    return false;
}

